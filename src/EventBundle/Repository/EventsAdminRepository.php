<?php

namespace EventBundle\Repository;

/**
 * EventsAdminRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventsAdminRepository extends \Doctrine\ORM\EntityRepository
{



    public function findTitre($input)
    {
        $query=$this->getEntityManager()->createQuery("SELECT f FROM EventBundle:EventsAdmin f 
        WHERE f.TitreEvnt LIKE '%$input%' 
        or f.NumeroEvent LIKE '%$input%' 
        or f.TypeEvent LIKE '%$input%'");

        return $query->getResult();
    }

    public function findcwf()
    {
        $query=$this->getEntityManager()->createQuery("SELECT f FROM EventBundle:EventsAdmin f ,EventBundle:Participant p 
        WHERE f.idEv=p.choix");


        return $query->getResult();
    }
    function StatMobile1()
    {
        try {
            return $this->getEntityManager()->createQuery(
                "Select SUM(f.numeroEvent)*100 as pourcentage from EventBundle:EventsAdmin f 
           Where f.typeEvent=:type"
            )->setParameter('type', "Formations")->getSingleScalarResult();
    } catch (NoResultException $e) {
} catch (NonUniqueResultException $e) {
}

    }
    function StatMobile2()
    {
        try {
            return $this->getEntityManager()->createQuery(
                "Select SUM(f.numeroEvent)*100 as pourcentage from EventBundle:EventsAdmin f 
           Where f.typeEvent=:type"
            )->setParameter('type', "Workshop")->getSingleScalarResult();
        } catch (NoResultException $e) {
        } catch (NonUniqueResultException $e) {
        }

    }
    function StatMobile3()
    {
        try {
            return $this->getEntityManager()->createQuery(
                "Select SUM(f.numeroEvent)*100 as pourcentage from EventBundle:EventsAdmin f 
           Where f.typeEvent=:type"
            )->setParameter('type', "Cours")->getSingleScalarResult();
        } catch (NoResultException $e) {
        } catch (NonUniqueResultException $e) {
        }

    }

   function Total()
    {
        try {
            return $this->getEntityManager()->createQuery(
                "select SUM(f.numeroEvent) as total from EventBundle:EventsAdmin f"
            )->getSingleScalarResult();
        } catch (NoResultException $e) {
        } catch (NonUniqueResultException $e) {
        }
    }








}
